@startuml

top to bottom direction
skinparam linetype ortho

class GravityGameObject {
  + GravityGameObject(int, int, int, int):
  + gravity(ArrayList<Platform>): void
}
class Player {
  + Player(int, int, int):
  - pickUpItem: boolean
  - pickUpCooldown: int
  - direction: Direction
  + startCountDown(): void
  + shoot(): void
  + drawOn(Graphics2D): void
  + activateShield(): void
  + reload(): void
  + rightEdgeHit(): void
  + increaseSpeed(double): void
  + isHit(): void
  + move(): void
  + bottomEdgeHit(): void
  + leftEdgeHit(): void
  + topEdgeHit(): void
   directionToFace: int
   moveLeft: boolean
   listOfLeftBullets: ArrayList<Bullets>
   moveDown: boolean
   direction: Direction
   listOfBullets: ArrayList<Bullets>
   pickUpCooldown: int
   moveUp: boolean
   pickUpItem: boolean
   moveRight: boolean
}
class Fuel {
  + Fuel(int, int):
  + drawOn(Graphics2D): void
  + interact(Player): void
}
GravityGameObject          -[#000082,plain]-^  GameObject

class Rocket {
  + Rocket(int, int):
  + drawPiece(Graphics2D, int): void
  + interact(Player): void
  + build(int, Graphics2D): void
  + takeOff(Graphics2D): void
}
interface Interactable << interface >> {
  + interact(Player): void
}

Fuel                       -[#000082,plain]-^  GravityGameObject
Fuel                       -[#008200,dashed]-^  Interactable
Player                     -[#595959,dashed]->  Bullets
Player                    "1" *-[#595959,plain]-> "bulletList\n*" Bullets
Player                    "1" *-[#595959,plain]-> "direction\n1" Direction
Player                     -[#000082,plain]-^  GravityGameObject
Player                     -[#595959,dashed]->  Sound
Player                    "1" *-[#595959,plain]-> "reloadSound\n1" Sound
Rocket                     -[#000082,plain]-^  GravityGameObject
Rocket                     -[#008200,dashed]-^  Interactable


@enduml
